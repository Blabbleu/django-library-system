# Generated by Django 5.0.6 on 2024-06-12 03:01

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
        ('books_db', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('date_of_birth', models.DateField(blank=True, null=True)),
                ('address', models.TextField(blank=True, null=True)),
                ('phone_number', models.CharField(blank=True, max_length=15, null=True)),
                ('level_of_education', models.CharField(blank=True, choices=[('HS', 'High School Diploma'), ('IN', 'Intermediate Level'), ('AD', 'Associate Degree'), ('BA', "Bachelor's Degree"), ('MA', "Master's Degree"), ('PH', 'Doctorate')], max_length=2, null=True)),
                ('department', models.CharField(blank=True, choices=[('LI', 'Librarian'), ('WK', 'Warehouse Keeper'), ('TR', 'Treasurer'), ('BD', 'Board of Directors'), ('IT', 'IT department')], max_length=2, null=True)),
                ('position', models.CharField(blank=True, choices=[('DI', 'Director'), ('DD', 'Deputy Director'), ('DH', 'Department Head'), ('DDH', 'Deputy Department Head'), ('SM', 'Staff Member'), ('ITT', 'IT Technician')], max_length=3, null=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Reader',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_of_birth', models.DateField()),
                ('address', models.TextField()),
                ('date_of_card_creation', models.DateField(default=django.utils.timezone.now)),
                ('reader_type', models.CharField(choices=[('X', 'Type X'), ('Y', 'Type Y')], max_length=1)),
                ('owed_money', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
                ('credit_score', models.DecimalField(decimal_places=2, default=0.0, max_digits=5)),
                ('borrowed_books', models.ManyToManyField(blank=True, related_name='borrowed_books', to='books_db.borrow')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='reader_profile', to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
