version: '3'

services:
  web:
    build:
      context: .
      dockerfile: builder/Dockerfile
    command: gunicorn digitallibrary.wsgi:application --bind 0.0.0.0:8000
    volumes:
      - .:/app
    ports:
      - "8000:8000"
    depends_on:
      - db
      - rabbitmq
    environment:
      - DATABASE_URL=${DOCKER_DATABASE_URL}
      - CELERY_BROKER_URL=${CELERY_BROKER_URL}
      - CELERY_RESULT_BACKEND=${CELERY_RESULT_BACKEND}
    entrypoint: ["/builder/web_entrypoint.sh"]
    networks:
      - net_a

  db:
    image: mysql:8.0
    restart: always
    environment:
      MYSQL_DATABASE: ${DATABASE_NAME}
      MYSQL_USER: ${DATABASE_USER}
      MYSQL_PASSWORD: ${DATABASE_PASSWORD}
      MYSQL_ROOT_PASSWORD: ${DATABASE_ROOT_PASSWORD}
    ports:
      - "3308:3306"
    networks:
      - net_a

  rabbitmq:
    image: rabbitmq:3-management
    environment:
      RABBITMQ_DEFAULT_USER: root
      RABBITMQ_DEFAULT_PASS: ${DATABASE_ROOT_PASSWORD}
    ports:
      - "5673:5672"
      - "15673:15672"
    networks:
      - net_a

  worker:
    build:
      context: .
      dockerfile: builder/Dockerfile
    command: celery -A digitallibrary worker --loglevel=info
    volumes:
      - .:/app
    depends_on:
      - db
      - rabbitmq
    environment:
      - DATABASE_URL=${DOCKER_DATABASE_URL}
      - CELERY_BROKER_URL=${CELERY_BROKER_URL}
      - CELERY_RESULT_BACKEND=${CELERY_RESULT_BACKEND}
    networks:
      - net_a

  beat:
    build:
      context: .
      dockerfile: builder/Dockerfile
    command: celery -A digitallibrary beat --loglevel=info
    volumes:
      - .:/app
    depends_on:
      - db
      - rabbitmq
    environment:
      - DATABASE_URL=${DOCKER_DATABASE_URL}
      - CELERY_BROKER_URL=${CELERY_BROKER_URL}
      - CELERY_RESULT_BACKEND=${CELERY_RESULT_BACKEND}
    networks:
      - net_a

  jenkins:
    image: jenkins/jenkins:lts
    ports:
      - "8082:8080"
    networks:
      - net_a
    volumes:
      - jenkins_home:/var/jenkins_home

  nginx:
    image: nginx:latest
    ports:
      - "80:80"
    networks:
      - net_a
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro

  portainer:
    image: portainer/portainer-ce
    ports:
      - "9000:9000"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - portainer_data:/data
    networks:
      - net_a

volumes:
  jenkins_home:
  db_data:
  portainer_data:

networks:
  net_a:
